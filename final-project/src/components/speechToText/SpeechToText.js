import React, { useEffect, useState } from "react";
import SpeechRecognition, {
  useSpeechRecognition,
} from "react-speech-recognition";
import "./speechToText.css";

//from documentation on https://www.npmjs.com/package/react-speech-recognition#basic-example
//useSpeechRecognition is a React hook that gives a component access to a transcript of speech picked up from the user's microphone.
//resetTranscript is part of the "react-speech-recognition" as is 'transcript', 'listening' and 'browserSupportsSpeechRecognition'
const SpeechToText = ({ label, setAttribute, userPrompt, setAPIKey }) => {
  const [localAPIKey, setLocalAPIKey] = useState("");
  const {
    transcript,
    listening,
    resetTranscript,
    browserSupportsSpeechRecognition,
  } = useSpeechRecognition();
  if (!browserSupportsSpeechRecognition) {
    return <span>Browser doesn't support speech recognition.</span>;
  }

  //when called this function stops the speech recogniton, AI image can then be generated by pressing 'create the magic!'
  const stop = () => {
    SpeechRecognition.stopListening();
    setAttribute(transcript);
  };

  const typeInput = (e) => {
    setAttribute(e.target.value);
  };

  function getUserAPIKey(e) {
    let userAPIKey = e.target.value;

    console.log(userAPIKey);
    setLocalAPIKey(userAPIKey);
  }

  function saveAPIKey() {
    setAPIKey(localAPIKey);
  }

  return (
    <div>
      <div className="micBox">
        <p>
          Microphone: <span> {listening ? "on" : "off"} </span>
        </p>
      </div>

      <button className="my-btn" onClick={SpeechRecognition.startListening}>
        <i className="fa-sharp fa-solid fa-microphone"></i> Start
      </button>
      <button className="my-btn" onClick={stop}>
        <i className="fa-sharp fa-solid fa-microphone-slash"></i> Stop
      </button>
      <button className="my-btn" onClick={resetTranscript}>
        <i className="fa-solid fa-trash-can"></i> Reset
      </button>

      <div className="transcriptBox">
        <p>Enter your API key here:</p>
        <input
          type="password"
          // className="APIinputBox"
          id="userAPIKey"
          onChange={getUserAPIKey}
          value={localAPIKey}
          className="textBox flex"
        />
        <br></br>
        <button className="my-btn" onClick={saveAPIKey}>
          {" "}
          thanks for entering your API key!{" "}
        </button>

        <p>Audio Text Output:</p>
        <p className="transcriptOutput"> {transcript}</p>
        <p>
          if it's not quite how you want it you can edit your audio input
          below...
        </p>
        <input
          className="textBox flex"
          onChange={typeInput}
          value={userPrompt}
        />
      </div>
    </div>
  );
};

export default SpeechToText;
